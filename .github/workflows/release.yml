# .github/workflows/release.yml
name: Release Gem

on:
  push:
    branches:
      - master

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.2"

      - name: Install dependencies
        run: bundle install --jobs 4 --retry 3

      - name: Get current version
        id: get_version
        run: |
          VERSION=$(ruby -e "puts Gem::Specification::load(Dir['*.gemspec'].first).version")
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"

      - name: Check if version changed
        id: version_check
        run: |
          git fetch origin master
          BASE_VERSION=$(git show origin/master:$(ls *.gemspec) | ruby -e "puts Gem::Specification::load(STDIN).version")
          if [ "${{ steps.get_version.outputs.version }}" != "$BASE_VERSION" ]; then
            echo "should_release=true" >> "$GITHUB_OUTPUT"
          else
            echo "should_release=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Update CHANGELOG
        if: steps.version_check.outputs.should_release == 'true'
        run: |
          gem install github_changelog_generator
          github_changelog_generator --user ${{ github.repository_owner }} --project ${{ github.event.repository.name }}

      - name: Commit updated CHANGELOG.md
        if: steps.version_check.outputs.should_release == 'true'
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add CHANGELOG.md
          git commit -m "chore: update changelog for v${{ steps.get_version.outputs.version }}" || true
          git push

      - name: Create Git tag
        if: steps.version_check.outputs.should_release == 'true'
        run: |
          git tag "v${{ steps.get_version.outputs.version }}"
          git push origin "v${{ steps.get_version.outputs.version }}"

      - name: Build the gem
        if: steps.version_check.outputs.should_release == 'true'
        run: gem build *.gemspec

      - name: Publish to RubyGems
        if: steps.version_check.outputs.should_release == 'true'
        env:
          RUBYGEMS_API_KEY: ${{ secrets.RUBYGEMS_API_KEY }}
        run: gem push *.gem

      - name: Create GitHub Release
        if: steps.version_check.outputs.should_release == 'true'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.get_version.outputs.version }}
